buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: "org.spongepowered", name: "mixingradle", version: "0.7-SNAPSHOT"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "twilightdecor.mixin-refmap.json"
}

version = '1.01'
group = 'io.github.jodlodi'
archivesBaseName = 'twilightdecor'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', "SCAN,REGISTRIES,REGISTRYDUMP"
            property 'forge.logging.console.level', 'debug'
            property "mixin.env.disableRefMap", "true"
            arg "-mixin.config=twilightdecor.mixin.json"
            mods {
                twilightdecor {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', "SCAN,REGISTRIES,REGISTRYDUMP"
            property 'forge.logging.console.level', 'debug'
            property "mixin.env.disableRefMap", "true"
            arg "-mixin.config=twilightdecor.mixin.json"
            mods {
                twilightdecor {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', "SCAN,REGISTRIES,REGISTRYDUMP"
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'twilightdecor', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                twilightdecor {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'

    implementation fg.deobf("curse.maven:twilightforest-227639:3413560")
    implementation fg.deobf("curse.maven:abnormals_core-382216:3457851")
    implementation fg.deobf("curse.maven:decorative_blocks-362528:3166283")

    annotationProcessor 'org.spongepowered:mixin:0.8.4:processor'
}

repositories {
    maven { url "https://maven.jaackson.me" }
    maven { url "https://www.cursemaven.com" }
    maven { url "https://dvs1.progwml6.com/files/maven/" }
    maven { url "https://modmaven.k-4u.nl" }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "twilightdecor",
            "Specification-Vendor": "twilightdecorsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "1.0",
            "Implementation-Vendor" :"twilightdecorsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": 0,
            "MixinConfigs" : "twilightdecor.mixin.json"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
